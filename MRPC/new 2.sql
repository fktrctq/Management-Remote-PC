SET SQL DIALECT 3;
SET NAMES UTF8;
CREATE DATABASE 'N:\NEWDB\TestDB.FDB'
USER 'sysdba' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET UTF8;




CREATE TABLE MAIN_PC (
    PC_ID       INTEGER NOT NULL,
    PC_NAME     VARCHAR(50) ,
    DATE_INV    DATE,
    INV_NUMBER  VARCHAR(50) ,
    RESULT_INV  VARCHAR(100) DEFAULT 'NO',
    ERROR_INV   VARCHAR(400),
    PC_OS       VARCHAR(200) 
);

ALTER TABLE MAIN_PC ADD CONSTRAINT PK_MAIN_PC PRIMARY KEY (PC_ID);

CREATE TABLE  CONFIG_PC (
    PC_ID                    INTEGER NOT NULL,
    PC_NAME                  VARCHAR(100),
    MONTERBOARD              VARCHAR(250),
    MONTERBOARD_SN           VARCHAR(250),
    MONTERBOARD_MANUFACTURE  VARCHAR(250),
    PROCESSOR                VARCHAR(250),
    PROCESSOR_CORE           VARCHAR(100),
    PROCESSOR_LOGPROC        VARCHAR(250),
    PROCESSOR_SPEED          VARCHAR(100),
    PROCESSOR_ARCH           VARCHAR(100),
    PROCESSOR_SOKET          VARCHAR(250),
    COUNT_PROC               INTEGER DEFAULT 0,
    MEMORY_SIZE              VARCHAR(300),
    MEMORY_TYPE              VARCHAR(300),
    SUMM_MEM_SIZE            VARCHAR(100),
    COUNT_MEM                INTEGER DEFAULT 1,
    VIDEOCARD                VARCHAR(250),
    VIDEOCARD_MEM            VARCHAR(250),
    COUNT_VIDEOCARD          INTEGER,
    HDD_NAME                 VARCHAR(1000),
    HDD_TYPE                 VARCHAR(1000),
    HDD_SIZE                 VARCHAR(1000),
    HDD_SN                   VARCHAR(1000),
    HDD_INTERFACETYPE        VARCHAR(1000),
    HDD_FIRMWARE             VARCHAR(1000),
    COUNT_HDD                INTEGER DEFAULT 0,
    OS_NAME                  VARCHAR(200),
    OS_VER                   VARCHAR(200),
    OS_KEY                   VARCHAR(200),
    OS_TYPE                  VARCHAR(200),
    INV_NUMBER               VARCHAR(200),
    OS_SP                    VARCHAR(200),
    USER_NAME                VARCHAR(100),
    NETWORKINTERFACE         VARCHAR(300),
    NETWORK_MAC              VARCHAR(300),
    NETWORK_SPEED            VARCHAR(300),
    NETWORK_IP               VARCHAR(300),
    NETWORK_COUNT_IP         VARCHAR(100),
    NETWORK_MASK             VARCHAR(300),
    NETWORK_GATEWAY          VARCHAR(300),
    NETWORK_COUNT_GATEWAY    VARCHAR(100),
    NETWORK_DHCP             VARCHAR(300),
    NETWORK_COUNT_DHCP       VARCHAR(100),
    NETWORK_DNS              VARCHAR(300),
    NETWORK_COUNT_DNS        VARCHAR(100),
    NETWORK_WINS             VARCHAR(300),
    NETWORK_COUNT_WINS       VARCHAR(100),
    COUNT_NETWORK            INTEGER DEFAULT 0,
    RESULT_INVENT            VARCHAR(250),
    OS_TIMEINSTALL           TIME,
    OS_DATEINSTALL           DATE,
    MONITOR_HW               VARCHAR(200),
    MONITOR_NAME             VARCHAR(500),
    MONITOR_MANUF            VARCHAR(500),
    MONITOR_DPI              VARCHAR(200),
    MONITOR_COUNT            VARCHAR(100) DEFAULT '0',
    DATE_INV                 DATE,
    TIME_INV                 TIME,
    DVDROM_NAME              VARCHAR(1000),
    DVDROM_TYPE              VARCHAR(1000),
    DVDROM_COUNT             VARCHAR(5) DEFAULT '0',
    SOUND_NAME               VARCHAR(1500),
    SOUND_COUNT              VARCHAR(5) DEFAULT '0'
);

ALTER TABLE CONFIG_PC ADD PRIMARY KEY (PC_ID);



CREATE TABLE START_PROC_MSI (
    ID_PROC           INTEGER NOT NULL,
    PATCH_PROC        VARCHAR(1000),
    TYPE_PROC         VARCHAR(10),
    DESCRIPTION_PROC  VARCHAR(1000),
    KEY_MSI           VARCHAR(250)
);

ALTER TABLE START_PROC_MSI ADD PRIMARY KEY (ID_PROC);

CREATE SEQUENCE GEN_MAIN_PC_ID START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE GEN_RUN_PROC_MSI_ID START WITH 0 INCREMENT BY 1;
CREATE SEQUENCE GEN_CONFIG_PC START WITH 1 INCREMENT BY 1;

SET TERM ^ ;
CREATE OR ALTER TRIGGER MAIN_PC_BI FOR MAIN_PC
ACTIVE BEFORE INSERT POSITION 4
as
begin
  if (new.pc_id is null) then
    new.pc_id = gen_id(gen_main_pc_id,1);
end
^
SET TERM ; ^


SET TERM ^ ;
CREATE OR ALTER TRIGGER CONFIG_PC FOR CONFIG_PC
ACTIVE BEFORE INSERT POSITION 0
AS
begin
  if (new.pc_id is null) then
    new.pc_id = gen_id(gen_config_pc,1);
end
^
SET TERM ; ^ 

SET TERM ^ ;
CREATE OR ALTER TRIGGER START_PROC_MSI_BI FOR START_PROC_MSI
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id_proc is null) then
    new.id_proc = gen_id(gen_run_proc_msi_id,1);
end
^
SET TERM ; ^


GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON CONFIG_PC TO SKRBLOG WITH GRANT OPTION;
GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON MAIN_PC TO SKRBLOG WITH GRANT OPTION;
GRANT SELECT, INSERT, UPDATE, DELETE, REFERENCES ON START_PROC_MSI TO SKRBLOG WITH GRANT OPTION;

GRANT USAGE ON SEQUENCE GEN_CONFIG_PC TO SKRBLOG WITH GRANT OPTION;
GRANT USAGE ON SEQUENCE GEN_MAIN_PC_ID TO SKRBLOG WITH GRANT OPTION;
GRANT USAGE ON SEQUENCE GEN_RUN_PROC_MSI_ID TO SKRBLOG WITH GRANT OPTION;
